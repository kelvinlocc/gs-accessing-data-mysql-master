package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import hello.User;
import hello.UserRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	private CurrencyRepository currencyRepositor;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (
			@RequestParam String name,
			@RequestParam String email,
			@RequestParam String amount,
			@RequestParam String distance,
			@RequestParam String currency,
			@RequestParam String exchangeCurrency
	) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		User n = new User();
		n.setName(name);
		n.setEmail(email);
		n.setAmount(amount);
		n.setDistance(distance);
		n.setCurrency(currency);
		n.setExchangeCurrency(exchangeCurrency);

		userRepository.save(n);
		return "Saved";
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}

	@GetMapping(path="/getRateAll")
	public @ResponseBody Iterable<Currency> getCurrency() {
		// This returns a JSON or XML with the users
		Currency currency = new Currency();
		currency.setId(2);
		currency.setCurrencyCode("HKD");
		currency.setExchangeCurrencyCode("TWD");
		return currencyRepositor.findAll();
	}

	@GetMapping(path="/getRateByName")
	public @ResponseBody Currency getCurrencyByName(@RequestParam String currencyCode) {
		// This returns a JSON or XML with the users
//		return currencyRepositor.findCurrencyByName(currencyCode);
		return null;
	}





}
